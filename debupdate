#!/bin/bash

# Get the IP address of the host
HOST_IP=$(hostname -I | awk '{print $1}')

# Display a welcome message
echo "Welcome $USER@$HOSTNAME ($HOST_IP)"
sleep 2

# Display system information
echo ":~${HOST_IP} uname -a"
uname -a
sleep 3

# Display login history
echo ":~${HOST_IP} last -10"
last -10
sleep 2

# Display information about users currently logged in
echo ":~${HOST_IP} who -a"
who -a
sleep 3

# Upgrade and Update the system
sudo apt update
sudo apt upgrade
sudo apt autoremove

# Check if inxi command is installed
if ! command -v inxi &> /dev/null; then
  # inxi command is not found, install it
  echo "Installing inxi..."
  if command -v apt-get &> /dev/null; then
    sudo apt-get update
    sudo apt-get install -y inxi
  elif command -v pacman &> /dev/null; then
    sudo pacman -Sy inxi
  else
    echo "Unable to install inxi. Please install it manually."
    exit 1
  fi
fi

# Check if speedtest command is installed
if ! command -v speedtest &> /dev/null; then
  # speedtest command is not found, install it
  echo "Installing speedtest-cli..."
  if command -v apt-get &> /dev/null; then
    sudo apt-get update
    sudo apt-get install -y speedtest-cli
  elif command -v yum &> /dev/null; then
    sudo yum install -y epel-release
    sudo yum install -y speedtest-cli
  elif command -v pacman &> /dev/null; then
    sudo pacman -Sy speedtest-cli
  else
    echo "Unable to install speedtest-cli. Please install it manually."
    exit 1
  fi
fi

# Display internet speed and system information
echo ":~$ {HOST_IP} speedtest"
speedtest --secure

# Get the running kernel version
running_kernel=$(uname -r)

# Get the installed kernel version
installed_kernel=$(ls /boot/vmlinuz-* | awk -F'-' '{print $2}')

# Get the uptime of the system
uptime=$(uptime -s)

# Get the current timestamp
current_timestamp=$(date +%s)

# Get the timestamp of one week ago
one_week_ago=$(date -d '1 week ago' +%s)

# Convert uptime to timestamp
uptime_timestamp=$(date -d "$uptime" +%s)

# Check if the system has been running for longer than one week
if [[ $uptime_timestamp -lt $one_week_ago ]]; then
  echo "The system has been running for longer than one week."
  if [[ $running_kernel != $installed_kernel ]]; then
    read -p "The running kernel ($running_kernel) differs from the installed kernel ($installed_kernel). Do you want to reboot? (y/n): " choice
    if [[ $choice == [Yy] ]]; then
      echo "Rebooting..."
      # Uncomment the following line to perform the reboot
      sudo reboot
    else
      echo "Reboot cancelled."
    fi
  else
    echo "The running kernel matches the installed kernel. No reboot required."
  fi
else
  echo "The system has not been running for longer than one week. No reboot required."
fi
uptime 
who -a
inxi

echo "byah"
