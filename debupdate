#!/bin/bash

# Get the IP address of the host
HOST_IP=$(hostname -I | awk '{print $1}')

# Display a welcome message
echo "Welcome $USER@$HOSTNAME ($HOST_IP)"
sleep 2

# Display system information
echo ":~${HOST_IP} uname -a"
uname -a
sleep 3

# Display login history
echo ":~${HOST_IP} last -10"
last -10
sleep 2

# Display information about users currently logged in
echo ":~${HOST_IP} who -a"
who -a
sleep 3

# Upgrade and Update the system
sudo apt update
sudo apt upgrade
sudo apt autoremove

# Check if inxi command is installed
if ! command -v inxi &> /dev/null; then
  # inxi command is not found, install it
  echo "Installing inxi..."
  if command -v apt &> /dev/null; then
    sudo apt update
    sudo apt install -y inxi
  elif command -v pacman &> /dev/null; then
    sudo pacman -Sy inxi
  else
    echo "Unable to install inxi. Please install it manually."
    exit 1
  fi
fi

# Check if speedtest command is installed
if ! command -v speedtest &> /dev/null; then
  # speedtest command is not found, install it
  echo "Installing speedtest-cli..."
  if command -v apt-get &> /dev/null; then
    sudo apt update
    sudo apt install -y speedtest-cli
  elif command -v yum &> /dev/null; then
    sudo yum install -y epel-release
    sudo yum install -y speedtest-cli
  elif command -v pacman &> /dev/null; then
    sudo pacman -Sy speedtest-cli
  else
    echo "Unable to install speedtest-cli. Please install it manually."
    exit 1
  fi
fi

# Display internet speed and system information
echo ":~${HOST_IP} speedtest"
speedtest --secure

# Get the running kernel version
running_kernel=$(uname -r)

# Get the installed kernel version
installed_kernel=$(ls /boot/vmlinuz-* | awk -F'-' '{print $2}')

# Get the uptime of the system
uptime=$(uptime -s)
#!/bin/bash

# Get the current timestamp
current_timestamp=$(date +%s)

# Get the timestamp of three days ago
three_days_ago=$(date -d '3 days ago' +%s)

# Convert uptime to timestamp
uptime_timestamp=$(date -d "$uptime" +%s)

# Calculate the time difference in seconds
time_difference=$((current_timestamp - uptime_timestamp))

# Convert time difference to days, hours, and minutes
days=$((time_difference / 86400))
hours=$(( (time_difference % 86400) / 3600 ))
minutes=$(( (time_difference % 3600) / 60 ))

# Check if the system has been running for longer than three days
if [[ $time_difference -ge $((3 * 24 * 3600)) ]]; then
  echo "The system has been running for longer than three days."
  if [[ $running_kernel != $installed_kernel ]]; then
    read -p "The running kernel ($running_kernel) differs from the installed kernel ($installed_kernel). Do you want to reboot? (y/N): " choice
    if [[ $choice != [Nn] ]]; then
      echo "Rebooting..."
      # Uncomment the following line to perform the reboot
       sudo reboot
    else
      echo "Reboot cancelled."
    fi
  else
    echo "The running kernel ($running_kernel) matches the installed kernel ($installed_kernel) . No reboot required."
  fi
else
  echo "The system has not been running for longer than three days. No reboot required."
  echo "Time difference: $days days, $hours hours, $minutes minutes"

  # Default to "no" if running for less than three days
  read -p "Do you want to reboot? (Y/n): " choice
  if [[ $choice == [Yy] ]]; then
    echo "Rebooting..."
    # Uncomment the following line to perform the reboot
     sudo reboot
  else
    echo "Reboot cancelled."
  fi
fi



uptime 
who -a
inxi

echo "byah"
